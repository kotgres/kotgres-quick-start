package io.kotgres

import io.kotgres.orm.connection.KotgresConnectionPool
import io.kotgres.orm.connection.KotgresConnectionPoolConfig
import io.kotgres.orm.dao.PrimaryKeyDao
import io.kotgres.orm.manager.DaoManager
import java.time.LocalDateTime


val connectionPool = KotgresConnectionPool.build(
    KotgresConnectionPoolConfig(
        "0.0.0.0", // host
        "kotgres", // database name
        54333, // port
        "kotgres", // username
        "kotgres", // password
    ),
)

fun main() {
    connectionPool.runQueryVoid(
        """
            CREATE TABLE IF NOT EXISTS users
            (
                id          int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                name        TEXT NOT NULL,
                email       TEXT NOT NULL,
                age         INT  NOT NULL,
                description TEXT,
                created_at  TIMESTAMP DEFAULT now(),
                updated_at  TIMESTAMP DEFAULT now()
            );
        """.trimIndent()
    )

    val userDao: PrimaryKeyDao<User, Int> = DaoManager.getPrimaryKeyDao(User::class.java, connectionPool)

    val insertedUser =
        userDao.insert(User(-1, "kotgres", "kotgres@kotgres.io", 42, null, LocalDateTime.now(), LocalDateTime.now()))
    println("New user has id ${insertedUser.id}")

    val allUsers = userDao.getAll()

    println("There are ${allUsers.size} users in the database")
}